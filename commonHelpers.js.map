{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js"],"sourcesContent":["export const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '42494915-f1925227b1d4f602df08c38a4';\n\nexport const options = {\n  params: {\n    key: API_KEY,\n    q: '',\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    page: 1,\n    per_page: 40,\n  },\n};","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { BASE_URL, options } from './pixabay-api.js';\n\nconst galleryEl = document.querySelector('.gallery');\nconst searchInputEl = document.querySelector('input[name=\"searchQuery\"');\nconst searchFormEl = document.getElementById('search-form');\n\nconst lightbox = new SimpleLightbox('.lightbox', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nlet totalHits = 0;\nlet reachedEnd = false;\n\nfunction renderGallery(hits) {\n  const markup = hits\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `\n              <a href=\"${largeImageURL}\" class=\"lightbox\">\n                  <div class=\"photo-card\">\n                      <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                      <div class=\"info\">\n                          <p class=\"info-item\">\n                              <b>Likes</b>\n                              ${likes}\n                          </p>\n                          <p class=\"info-item\">\n                              <b>Views</b>\n                              ${views}\n                          </p>\n                          <p class=\"info-item\">\n                              <b>Comments</b>\n                              ${comments}\n                          </p>\n                          <p class=\"info-item\">\n                              <b>Downloads</b>\n                              ${downloads}\n                          </p>\n                      </div>\n                  </div>\n              </a>\n              `;\n      }\n    )\n    .join('');\n\n  galleryEl.insertAdjacentHTML('beforeend', markup);\n\n  if (options.params.page * options.params.per_page >= totalHits) {\n    if (!reachedEnd) {\n      Notify.info(\"We're sorry, but you've reached the end of search results.\");\n      reachedEnd = true;\n    }\n  }\n  lightbox.refresh();\n}\n\nasync function handleSubmit(e) {\n  e.preventDefault();\n  options.params.q = searchInputEl.value.trim();\n  if (options.params.q === '') {\n    return;\n  }\n  options.params.page = 1;\n  galleryEl.innerHTML = '';\n  reachedEnd = false;\n\n  try {\n    const response = await axios.get(BASE_URL, options);\n    totalHits = response.data.totalHits;\n\n    const { hits } = response.data;\n    console.log(hits);\n\n    if (hits.length === 0) {\n      Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n    } else {\n      Notify.success(`Hooray! We found ${totalHits} images.`);\n      renderGallery(hits);\n    }\n    searchInputEl.value = '';\n  } catch (err) {\n    Notify.failure(err);\n  }\n}\n\nsearchFormEl.addEventListener('submit', handleSubmit);\n\nasync function loadMore() {\n  options.params.page += 1;\n  try {\n    const response = await axios.get(BASE_URL, options);\n    const hits = response.data.hits;\n    renderGallery(hits);\n  } catch (err) {\n    Notify.failure(err);\n  }\n}\n\nfunction handleScroll() {\n  const { scrollTop, scrollHeight, clientHeight } = document.documentElement;\n\n  if (scrollTop + clientHeight >= scrollHeight) {\n    loadMore();\n  }\n}\n\nwindow.addEventListener('scroll', handleScroll);\n"],"names":["BASE_URL","API_KEY","options","galleryEl","searchInputEl","searchFormEl","lightbox","SimpleLightbox","totalHits","reachedEnd","renderGallery","hits","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","Notify","handleSubmit","e","response","axios","err","loadMore","handleScroll","scrollTop","scrollHeight","clientHeight"],"mappings":"+vBAAO,MAAMA,EAAW,2BAClBC,EAAU,qCAEHC,EAAU,CACrB,OAAQ,CACN,IAAKD,EACL,EAAG,GACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAM,EACN,SAAU,EACX,CACH,ECPME,EAAY,SAAS,cAAc,UAAU,EAC7CC,EAAgB,SAAS,cAAc,0BAA0B,EACjEC,EAAe,SAAS,eAAe,aAAa,EAEpDC,EAAW,IAAIC,EAAe,YAAa,CAC/C,aAAc,MACd,aAAc,GAChB,CAAC,EAED,IAAIC,EAAY,EACZC,EAAa,GAEjB,SAASC,EAAcC,EAAM,CAC3B,MAAMC,EAASD,EACZ,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA,yBACUL,CAAa;AAAA;AAAA,kCAEJD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA,gCAI5BC,CAAK;AAAA;AAAA;AAAA;AAAA,gCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,gCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,gCAIRC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA,eAOpC,EACA,KAAK,EAAE,EAEVhB,EAAU,mBAAmB,YAAaS,CAAM,EAE5CV,EAAQ,OAAO,KAAOA,EAAQ,OAAO,UAAYM,IAC9CC,IACHW,SAAO,KAAK,4DAA4D,EACxEX,EAAa,KAGjBH,EAAS,QAAO,CAClB,CAEA,eAAee,EAAaC,EAAG,CAG7B,GAFAA,EAAE,eAAc,EAChBpB,EAAQ,OAAO,EAAIE,EAAc,MAAM,KAAI,EACvCF,EAAQ,OAAO,IAAM,GAGzB,CAAAA,EAAQ,OAAO,KAAO,EACtBC,EAAU,UAAY,GACtBM,EAAa,GAEb,GAAI,CACF,MAAMc,EAAW,MAAMC,EAAM,IAAIxB,EAAUE,CAAO,EAClDM,EAAYe,EAAS,KAAK,UAE1B,KAAM,CAAE,KAAAZ,CAAI,EAAKY,EAAS,KAC1B,QAAQ,IAAIZ,CAAI,EAEZA,EAAK,SAAW,EAClBS,EAAAA,OAAO,QACL,0EACR,GAEMA,EAAM,OAAC,QAAQ,oBAAoBZ,CAAS,UAAU,EACtDE,EAAcC,CAAI,GAEpBP,EAAc,MAAQ,EACvB,OAAQqB,EAAK,CACZL,SAAO,QAAQK,CAAG,CACnB,EACH,CAEApB,EAAa,iBAAiB,SAAUgB,CAAY,EAEpD,eAAeK,GAAW,CACxBxB,EAAQ,OAAO,MAAQ,EACvB,GAAI,CAEF,MAAMS,GADW,MAAMa,EAAM,IAAIxB,EAAUE,CAAO,GAC5B,KAAK,KAC3BQ,EAAcC,CAAI,CACnB,OAAQc,EAAK,CACZL,SAAO,QAAQK,CAAG,CACnB,CACH,CAEA,SAASE,GAAe,CACtB,KAAM,CAAE,UAAAC,EAAW,aAAAC,EAAc,aAAAC,CAAY,EAAK,SAAS,gBAEvDF,EAAYE,GAAgBD,GAC9BH,GAEJ,CAEA,OAAO,iBAAiB,SAAUC,CAAY"}